version: '3'

services:
  jobdash.server:
    image: shortpoet/jobdash-server
    build:
      context: .
      dockerfile: docker/Dockerfile-server
    tty: true
    stdin_open: true
    working_dir: /opt/node_app/app/server
    command: yarn run start:dev
    environment:
      - DOCKER=1
    depends_on:
      - mongo
    ports:
      - 3000:3000
    volumes:
      - .:/opt/node_app/app

  jobdash.client:
    image: shortpoet/jobdash-client
    build:
      context: .
      dockerfile: docker/Dockerfile-client
    tty: true
    working_dir: /opt/node_app/app/dashboard
    command: yarn docker
    ports:
      - 8080:8080
    volumes:
      - .:/opt/node_app/app

  mongo:
    image: mongo
    restart: always
    volumes:
      # swap for windows no WSL
      # - tmp.nosync/mongo:/data/db
      - ${PWD}/tmp.nosync/mongo:/data/db
    container_name: mongo
    # NOTE: Use these variables to enable authentication for mongo and mongo-express (duplicate below)
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
      
  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    restart: always
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 8081:8081

# https://stackoverflow.com/questions/31210973/how-do-i-seed-a-mongo-database-using-docker-compose
  mongo-seed:
  image: shortpoet/jobdash-mongo-seed
    build:
      context: .
      dockerfile: docker/Dockerfile-server-seed
    links:
      - mongo

# If on windows with no subsystem for linux installed
# named volumes
# https://gist.github.com/ashblue/aa20cd90d2b4609c0b496b66d4153b99
# if added WSL
# http://beyondthecorneroffice.com/2018-04-18-MongoDB-on-Windows-Docker/
# uncomment this line and swap above
# volumes:
#   tmp.nosync/mongo:
  